package com.drinkdrankwasted.android.bac.adapter;

import java.io.File;
import java.text.DecimalFormat;
import java.util.ArrayList;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.CountDownTimer;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.drinkdrankwasted.android.bac.R;
import com.drinkdrankwasted.android.bac.util.CalcData;
import com.drinkdrankwasted.android.bac.util.Logic;

public class GamerCursorAdapter extends ArrayAdapter<Long> {
	private final Activity context;
	private final CalcData cd;
	private long prevGameId = -1;
	private boolean isPrevGame = false;

	private Logic l;
	LayoutInflater li;
	DecimalFormat dez;
	
	// static to save the reference to the outer class and to avoid access to
	// any members of the containing class
	static class ViewHolder {
		public ImageView image;
		public TextView name;
		public TextView max;
		public TextView curr;
		public TextView time;
	}

	public GamerCursorAdapter(Activity context, int id, int name, CalcData cd) {
		super(context, id, name, cd.playerIds);
		this.context = context;
		this.cd = cd;
		
		li = (LayoutInflater) context
				.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		l = new Logic();
		dez = new DecimalFormat(
				context.getString(R.string.util_format_two_decimal));

	}

	public GamerCursorAdapter(Activity context, int id, int name, CalcData cd, long prevGameId) {
		super(context, id, name, cd.playerIds);
		this.context = context;
		this.cd = cd;
		this.prevGameId = prevGameId;
		this.isPrevGame = true;
		
		li = (LayoutInflater) context
				.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		l = new Logic();
		dez = new DecimalFormat(
				context.getString(R.string.util_format_two_decimal));
	}
	
	

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		
		final ViewHolder holder;
		
		// for countdowntimer to work
		convertView = null;
			
		convertView = li.inflate(R.layout.game_screen_player, null);
		
		holder = new ViewHolder();
		holder.image = (ImageView) convertView.findViewById(R.id.gs_img_of_player);
		holder.name = (TextView) convertView.findViewById(R.id.gs_name_of_gamer);
		holder.max = (TextView) convertView.findViewById(R.id.gs_max_of_gamer);
		holder.curr = (TextView) convertView.findViewById(R.id.gs_curr_of_gamer);
		holder.time = (TextView) convertView.findViewById(R.id.gs_time_of_gamer);
		
		convertView.setTag(holder);
			
		
		holder.name.setText(cd.playerNames[position]);
		holder.max.setText(context.getString(R.string.util_tv_max, dez.format(cd.playerMaxContent[position])));
		holder.curr.setText(context.getString(R.string.util_tv_curr, dez.format(cd.playerAlcContent[position])));
		
		if (cd.playerAlcContent[position] > 0) {
			CountDownTimer soberTimer = new CountDownTimer((long) (cd.playerAlcContent[position] / 0.15 * 3600000d), 1000) {

				@Override
				public void onTick(long leftTime) {
					holder.time.setText(l.getTime(leftTime) + " ");
				}

				@Override
				public void onFinish() {
					holder.time.setText(context.getString(R.string.util_tv_now_s) + " ");
				}
			};
			soberTimer.start();
		} else {
			holder.time.setText(context.getString(R.string.util_tv_now_s) + " ");
		}
		
		
		if (cd.playerPics[position] == -1) {
			Bitmap b;
			if (isPrevGame) {
				b = BitmapFactory.decodeFile(context.getFilesDir()
						+ File.separator + "games" + File.separator
						+ prevGameId + File.separator + "pics" + File.separator
						+ "pic" + cd.playerIds[position] + "s.jpg");
			} else {
				b = BitmapFactory.decodeFile(context.getFilesDir()
						+ File.separator + "games" + File.separator
						+ "curr_game" + File.separator + "pics"
						+ File.separator + "pic" + cd.playerIds[position]
						+ "s.jpg");
			}
			holder.image.setImageBitmap(b);
		} else {
			holder.image.setImageDrawable(context.getResources()
					.getDrawable(l.getAvatarImgS(cd.playerPics[position])));
		}
		
		return convertView;
	}

	@Override
	public long getItemId(int position) {
		return cd.playerIds[position];
	}
	
	
	
}
