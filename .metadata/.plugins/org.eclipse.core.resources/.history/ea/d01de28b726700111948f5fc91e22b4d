package at.fhooe.mc.linzguide.android.activity;

import java.util.ArrayList;
import java.util.List;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.drawable.Drawable;
import android.location.Location;
import android.location.LocationManager;
import android.os.Bundle;
import android.util.SparseBooleanArray;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;
import at.fhooe.mc.linzguide.android.R;
import at.fhooe.mc.linzguide.android.db.DBGeopoints;
import at.fhooe.mc.linzguide.android.util.DataGeopoint;
import at.fhooe.mc.linzguide.android.util.RawDataProvider;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.MyLocationOverlay;
import com.google.android.maps.Overlay;
import com.google.android.maps.OverlayItem;

public class Map extends MapActivity {

	MapView mMapView;
	MapController mMapController;

	GeoPoint mGeoPoint = new GeoPoint(48307747, 14286175);
	public LocationManager mLocationManager;
	private MyLocationOverlay mMyOverlay;
	
	DBGeopoints dbGeopoints;
	
	ItemizedOverlay itemizedoverlay;
	List<Overlay> mapOverlays;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.map);

		mMapView = (MapView) findViewById(R.id.mapview);
		mMapView.setBuiltInZoomControls(true);
		mMapView.setSatellite(false);
		
		mMapController = mMapView.getController();
		mMapController.setCenter(mGeoPoint);
		mMapController.setZoom(15);
		
		dbGeopoints = new DBGeopoints(getApplicationContext());

		mMyOverlay = new MyLocationOverlay(this, mMapView) {

			@Override
			public synchronized void onLocationChanged(Location location) {
				super.onLocationChanged(location);
				final GeoPoint meinePosition = new GeoPoint(
						(int) (location.getLatitude() * 1E6),
						(int) (location.getLongitude() * 1E6));
				// mMapController.animateTo(meinePosition);
			}

		};
		mLocationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
		mapOverlays = mMapView.getOverlays();
		Drawable drawable = this.getResources().getDrawable(
				R.drawable.hort);
		
		itemizedoverlay = new ItemizedOverlay(drawable) {
			@Override
			public void draw(Canvas canvas, MapView mapView, boolean shadow) {
			    if (!shadow)
			        super.draw(canvas, mapView, shadow);
			}
		};

		if(getIntent().hasExtra("points")){
			ArrayList<DataGeopoint> items = (ArrayList<DataGeopoint>) getIntent().getSerializableExtra("points");
			
			GeoPoint myGeo;
			OverlayItem myItem;
			
			for (int i = 0; i < items.size(); i++) {
				myGeo = new GeoPoint(items.get(i).lat, items.get(i).lon);
				myItem = new OverlayItem(myGeo, items.get(i).name, items.get(i).address);
				itemizedoverlay.addOverlay(myItem);
			}
			mapOverlays.add(itemizedoverlay);
		}
		
		if(getIntent().hasExtra("point")){
			DataGeopoint items = (DataGeopoint) getIntent().getSerializableExtra("point");
			
			GeoPoint myGeo;
			OverlayItem myItem;
			
			myGeo = new GeoPoint(items.lat, items.lon);
			myItem = new OverlayItem(myGeo, items.name, items.address);
			itemizedoverlay.addOverlay(myItem);
			
			mMapController.setCenter(myGeo);
			
			mapOverlays.add(itemizedoverlay);
		}

	}
	

	@Override
	protected void onPause() {
		dbGeopoints.closeOnPause();
		mMyOverlay.disableMyLocation();
		mMapView.getOverlays().remove(mMyOverlay);
		mLocationManager.removeUpdates(mMyOverlay);
		super.onPause();
	}

	@Override
	protected void onResume() {
		super.onResume();
		mLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,
				5000L, 20.0f, mMyOverlay);

		mMapView.getOverlays().add(mMyOverlay);
		mMyOverlay.enableMyLocation();

		mMyOverlay.runOnFirstFix(new Runnable() {

			public void run() {

				//mMapController.animateTo(mMyOverlay.getMyLocation());

			}
		});
	}
	
	public void selectPOIs(final View view){

			final ListView list = new ListView(this);
			list.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
			list.setBackgroundColor(Color.WHITE);

			ArrayAdapter<String> poiAdapter = new ArrayAdapter<String>(
	    			getApplicationContext(), 
	    			android.R.layout.select_dialog_multichoice, 
	    			android.R.id.text1, 
	    			RawDataProvider.catsNames);
			
			list.setAdapter(poiAdapter);
			
			AlertDialog.Builder builder = new AlertDialog.Builder(this);
			builder.setTitle("Select the POIs to view:");
			builder.setView(list);

			builder.setPositiveButton(getString(android.R.string.ok),
					new DialogInterface.OnClickListener() {

						public void onClick(DialogInterface dialog, int arg1) {

							dialog.dismiss();
							
							mapOverlays.clear();
							
							SparseBooleanArray which = list.getCheckedItemPositions();
							
							for(int i = 0; i<14; i++){
								if(which.get(i)){
									
									ArrayList<DataGeopoint> items = dbGeopoints.getAllGeopointsOfType(i);
									
									itemizedoverlay = new ItemizedOverlay(getApplication().getResources().getDrawable(
											R.drawable.hort));
									
									GeoPoint myGeo;
									OverlayItem myItem;
									
									for (int j = 0; j < items.size(); j++) {
										myGeo = new GeoPoint(items.get(j).lat, items.get(j).lon);
										myItem = new OverlayItem(myGeo, items.get(j).name, items.get(j).address);
										itemizedoverlay.addOverlay(myItem);
									}
									
									mapOverlays.add(itemizedoverlay);
									
								}
							}
							
							mMapView.invalidate();
						}

					});
			builder.setNegativeButton(getString(android.R.string.cancel),
					new DialogInterface.OnClickListener() {

						public void onClick(DialogInterface dialog, int arg1) {
							dialog.dismiss();
						}
					});
			AlertDialog alert = builder.create();
			alert.show();

	}

	@Override
	protected boolean isRouteDisplayed() {
		// TODO Auto-generated method stub
		return false;
	}

	public class ItemizedOverlay extends
			com.google.android.maps.ItemizedOverlay {

		Context mContext = Map.this;
		private ArrayList<OverlayItem> mOverlays = new ArrayList<OverlayItem>();

		public ItemizedOverlay(Drawable defaultMarker) {
			super(boundCenterBottom(defaultMarker));

		}

		public ItemizedOverlay(Drawable defaultMarker, Context context) {
			super(defaultMarker);
			mContext = context;
		}

		@Override
		protected OverlayItem createItem(int i) {
			return mOverlays.get(i);

		}

		@Override
		public int size() {
			return mOverlays.size();
		}

		public void addOverlay(OverlayItem overlay) {
			mOverlays.add(overlay);
			populate();
		}

		@Override
		protected boolean onTap(int index) {
			OverlayItem item = mOverlays.get(index);
			AlertDialog.Builder dialog = new AlertDialog.Builder(mContext);
			dialog.setTitle(item.getTitle());
			dialog.setMessage(item.getSnippet());
			dialog.show();
			return true;

		}

	}

}
