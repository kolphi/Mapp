package at.fhooe.mc.linzbrowser.android;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HttpContext;

import android.app.ListActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.ListAdapter;
import android.widget.TextView;
import android.widget.Toast;

public class LinzBrowserActivity extends ListActivity {
	
	TextView txt;
	ArrayList<DataHotspot> spots;
	
	DBGeopoints dbGeopoints;
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        dbGeopoints = new DBGeopoints(getApplicationContext());
        
    }
    
    
    @Override
    protected void onResume() {
    	
    	ArrayList<DataHort> items = dbGeopoints.getAllHort();
    	
    	ListAdapter optionAdapter = new HortAdapter(this,
				R.layout.list_element_2_lines,
				R.id.list_element_2_lines_title, items);
    	
    	getListView().setAdapter(optionAdapter);
    	
    	super.onResume();
    }
    
    public void parse(final View view){
    	
    	/*
    	try {
    		
			Document doc = Jsoup.connect("http://www.linztermine.at/schnittstelle/downloads/events_xml.php").get();
			Elements titles = doc.select("title");
			Elements locations = doc.select("location");
			
			
			StringBuffer sb = new StringBuffer();
			
			for(Element title : titles){
				sb.append(title.text());
				sb.append("\n");
			}
			sb.append("\n");
			for(Element location : locations){
				sb.append(location.text());
				sb.append("\n");
			}
			
			
			txt.setText(sb.toString());
			
		} catch (IOException e) {
			e.printStackTrace();
		}
    	
    	*/
    	
    	spots = new ArrayList<DataHotspot>();
    	
    	URI uri;
		try {
			uri = new URI("http://data.linz.gv.at/katalog/Freizeit/hotspot/Hotspot_Geodaten.csv");
    	
	    	HttpClient httpClient = new DefaultHttpClient();
	    	HttpContext localContext = new BasicHttpContext();
	        HttpGet httpGet = new HttpGet(uri);
	        HttpResponse response;
	        response = httpClient.execute(httpGet, localContext);
	
	        BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), "ISO-8859-1"));
	    	
	    	String next[] = {};
	        List<String[]> list = new ArrayList<String[]>();
	
	        CSVReader reader1 = new CSVReader(reader);
	        for(;;) {
	            next = reader1.readNext();
	            if(next != null) {
	                list.add(next);
	            } else {
	                break;
	            }
	        }
	        
			
			for(int i = 1; i < list.size(); i++){
				
				spots.add(new DataHotspot(list.get(i)[1], list.get(i)[2], list.get(i)[3], list.get(i)[4], list.get(i)[5], list.get(i)[6], list.get(i)[7], list.get(i)[8], list.get(i)[9], list.get(i)[10]));
			
			}
			
			txt.setText(spots.size() + " Hotspots loaded!");

		} catch (URISyntaxException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (ClientProtocolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalStateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    
    public void checkForUpdate(final View view){
    	
    	GeodataUpdater updater = new GeodataUpdater(getApplicationContext());
    	if(updater.isUpdateAvailable()){
    		updater.updateData();
    	}else{
    		Toast.makeText(getApplicationContext(), "Everything is Up2Date!", Toast.LENGTH_SHORT).show();
    	}
    	
    }
    
    public void showMap(final View view){
    	Intent i = new Intent(getApplicationContext(), Map.class);
    	i.putExtra("data", spots);
    	startActivity(i);
    }
}